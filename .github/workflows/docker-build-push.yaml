name: Build and Push Docker Images

on:
  push:
    branches:
      - master

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      setup: ${{ steps.setup.outputs.setup }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        id: setup
        uses: docker/setup-buildx-action@v1
        with:
          driver-opts: image=moby/buildkit:master

  build-and-push-emane-python:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push emane-python image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: dockerfiles/Dockerfile.${{ matrix.arch }}.emane-python
          platforms: linux/${{ matrix.arch }}
          push: true
          tags: ghcr.io/${{ github.repository }}:emane-python-${{ matrix.arch }}

  build-and-push-ospf-mdr-rpm:
    runs-on: ubuntu-latest
    needs: [setup, build-and-push-emane-python]
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push ospf-mdr-rpm image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: dockerfiles/Dockerfile.${{ matrix.arch }}.ospf-mdr-rpm
          platforms: linux/${{ matrix.arch }}
          push: true
          tags: ghcr.io/${{ github.repository }}:ospf-mdr-rpm-${{ matrix.arch }}

  build-and-push-ospf-mdr-deb:
    runs-on: ubuntu-latest
    needs: [setup, build-and-push-emane-python]
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push ospf-mdr-deb image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: dockerfiles/Dockerfile.${{ matrix.arch }}.ospf-mdr-deb
          platforms: linux/${{ matrix.arch }}
          push: true
          tags: ghcr.io/${{ github.repository }}:ospf-mdr-deb-${{ matrix.arch }}

  build-and-push-rocky:
    runs-on: ubuntu-latest
    needs: [setup, build-and-push-ospf-mdr-rpm]
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push rocky image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: dockerfiles/Dockerfile.${{ matrix.arch }}.rocky
          platforms: linux/${{ matrix.arch }}
          push: true
          tags: ghcr.io/${{ github.repository }}:rocky-${{ matrix.arch }}

  build-and-push-ubuntu:
    runs-on: ubuntu-latest
    needs: [setup, build-and-push-ospf-mdr-deb]
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push ubuntu image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: dockerfiles/Dockerfile.${{ matrix.arch }}.ubuntu
          platforms: linux/${{ matrix.arch }}
          push: true
          tags: ghcr.io/${{ github.repository }}:ubuntu-${{ matrix.arch }}
